Lab3 - AWS 
        install plugins - ec2
Lab2 - Jenkins+Docker
        install plugins - docker, docker pipeline 
        create a folder c:\tmp
        create dockerfile
            FROM node:18.16.0-alpine
            COPY t1.js /
            EXPOSE 8080
            CMD ["node", "/t1.js"]
        create t1.js 
            var http = require('http');

            //create a server object:
            http.createServer(function (req, res) {
            res.write('<body bgcolor="yellow"><h1>Hello World at 11.14!</h1></body>'); //write a response to the client
            res.end(); //end the response
            }).listen(8080); //the server object listens on port 8080
        create new items -> name-Demo7docker, freestyle
                build step ->  windows cmd -> docker run node:18.16.0-alpine  --version

       
        create image 
                Option1 - directly using windows batch or shell
                    docker run node:18.16.0-alpine  --version
                    cd /tmp
                    docker build -t synnode .
                    docker tag synnode {{uid}}/synnode
                    docker login -u {{uid}} -p {{token}}
                    docker push {{uid}}/synnode
                Option2 - using build step as build/publish docker image
                    select a folder 
        run 
        to confirm
            check docker hub for new image
            create a container and check (docker run -p 8080:8080 -d  {{uid}}/synnode )
    --> copy t1.js and dockerfile in github, modify build trigger to poll github at every 5 mins

https://www.baeldung.com/cs/virtualization-vs-containerization

Lab1 - Jenkins + AWS - https://www.jenkins.io/doc/tutorials/tutorial-for-installing-jenkins-on-AWS/
       Jenkins + Docker - https://www.jenkins.io/doc/book/pipeline/docker/
       Jenkins + K8S - https://www.jenkins.io/doc/book/installing/kubernetes/

